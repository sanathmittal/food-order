{"ast":null,"code":"var _jsxFileName = \"D:\\\\web development 1\\\\web development 2\\\\React-udemycorseprojects\\\\Foodorder frontend\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartstate = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.items.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartstate;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartstate);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"id2gPvG4xsZBAaULnxQBU5BhjOI=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["D:/web development 1/web development 2/React-udemycorseprojects/Foodorder frontend/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartstate","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AACA,MAAMC,gBAAgB,GAAC;AACnBC,EAAAA,KAAK,EAAC,EADa;AAEnBC,EAAAA,WAAW,EAAC;AAFO,CAAvB;;AAKA,MAAMC,WAAW,GAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC9B,MAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EAAuB;AACrB,UAAMC,YAAY,GAACH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAAnB;AACA,UAAMC,kBAAkB,GAACN,KAAK,CAACF,WAAN,GAAkBG,MAAM,CAACJ,KAAP,CAAaU,KAAb,GAAmBN,MAAM,CAACI,IAAP,CAAYG,MAA1E;AACA,WAAO;AACHX,MAAAA,KAAK,EAACM,YADH;AAEHL,MAAAA,WAAW,EAACQ;AAFT,KAAP;AAID;;AACD,SAAOV,gBAAP;AACH,CAVD;;AAWA,MAAMa,YAAY,GAAEC,KAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAWC,kBAAX,IAA+BlB,UAAU,CAACK,WAAD,EAAaH,gBAAb,CAA/C;;AAEA,QAAMiB,oBAAoB,GAAER,IAAD,IAAQ;AAC/BO,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAC,KAAN;AAAYG,MAAAA,IAAI,EAACA;AAAjB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMS,yBAAyB,GAACC,EAAE,IAAE;AAChCH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAC,QAAN;AAAea,MAAAA,EAAE,EAACA;AAAlB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMC,WAAW,GAAE;AACfnB,IAAAA,KAAK,EAACc,SAAS,CAACd,KADD;AAEfC,IAAAA,WAAW,EAACa,SAAS,CAACb,WAFP;AAGfmB,IAAAA,OAAO,EAAEJ,oBAHM;AAIfK,IAAAA,UAAU,EAACJ;AAJI,GAAnB;AAMA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACTN,KAAK,CAACS;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAnBD;;GAAMV,Y;;KAAAA,Y;AAoBN,eAAeA,YAAf","sourcesContent":["import React,{useReducer} from 'react'\r\nimport CartContext from './cart-context';\r\nconst defaultCartstate={\r\n    items:[],\r\n    totalAmount:0\r\n}\r\n\r\nconst cartReducer=(state,action)=>{\r\n    if(action.type==='ADD'){\r\n      const updatedItems=state.items.concat(action.item)\r\n      const updatedTotalAmount=state.totalAmount+action.items.price*action.item.amount;\r\n      return {\r\n          items:updatedItems,\r\n          totalAmount:updatedTotalAmount\r\n      }\r\n    }\r\n    return defaultCartstate\r\n}\r\nconst CartProvider=(props)=>{\r\n    const [cartState,dispatchCartAction]=useReducer(cartReducer,defaultCartstate)\r\n    \r\n    const addItemToCartHandler=(item)=>{\r\n        dispatchCartAction({type:'ADD',item:item});\r\n    };\r\n\r\n    const removeItemFromCartHandler=id=>{\r\n        dispatchCartAction({type:'REMOVE',id:id})\r\n    }\r\n    const cartContext ={\r\n        items:cartState.items,\r\n        totalAmount:cartState.totalAmount,\r\n        addItem: addItemToCartHandler ,\r\n        removeItem:removeItemFromCartHandler,\r\n    }\r\n    return <CartContext.Provider value={cartContext}>\r\n {props.children}\r\n    </CartContext.Provider>\r\n};\r\nexport default CartProvider"]},"metadata":{},"sourceType":"module"}